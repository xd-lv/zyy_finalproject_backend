<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="finalproject.mapper.NodeMapper">

    <resultMap id="Base_Map" type="finalproject.entity.Node">
        <id property="id" column="id"/>
        <result column="edge_id" jdbcType="INTEGER" property="edgeId" />
        <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
        <result column="desc" jdbcType="VARCHAR" property="desc" />
        <result column="desc" jdbcType="VARCHAR" property="desc" />
        <result column="gpu" jdbcType="INTEGER" property="gpu" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="memory" jdbcType="INTEGER" property="memory" />
        <result column="network_method" jdbcType="INTEGER" property="networkMethod" />
        <result column="cpu" jdbcType="INTEGER" property="cpu" />
        <result column="is_sys" jdbcType="INTEGER" property="isSys" />
        <result column="device_type" jdbcType="INTEGER" property="deviceType" />
        <result column="mac" jdbcType="VARCHAR" property="mac" />
        <result column="is_authorize" jdbcType="INTEGER" property="isAuthorize" />
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="update_time" jdbcType="DATE" property="updateTime" />
    </resultMap>
    <select id="listNode" resultMap="Base_Map">
        SELECT *
        FROM `node`
        ORDER BY create_time DESC
    </select>
    <select id="countNodeByEdge" resultType="java.lang.Integer">
        SELECT count(*)
        FROM `node`
        WHERE edge_id=#{id}
    </select>
    <insert id="create" parameterType="finalproject.entity.Node" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `node`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nodeName!=null">
                `node_name`,
            </if>
            <if test="desc!=null">
                `desc`,
            </if>
            <if test="edgeId!=null">
                `edge_id`,
            </if>
            <if test="networkMethod!=null">
                `network_method`,
            </if>
            <if test="mac!=null">
                `mac`,
            </if>
            <if test="cpu!=null">
                `cpu`,
            </if>
            <if test="gpu!=null">
                `gpu`,
            </if>
            <if test="memory!=null">
                `memory`,
            </if>
            <if test="status!=null">
                `status`,
            </if>

        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nodeName!=null">
                #{nodeName},
            </if>
            <if test="desc!=null">
                #{desc},
            </if>
            <if test="edgeId!=null">
                #{edgeId},
            </if>
            <if test="networkMethod!=null">
                #{networkMethod},
            </if>
            <if test="mac!=null">
                #{mac},
            </if>
            <if test="cpu!=null">
                #{cpu},
            </if>
            <if test="gpu!=null">
                #{gpu},
            </if>
            <if test="memory!=null">
                #{memory},
            </if>
            <if test="status!=null">
                #{status},
            </if>
        </trim>
    </insert>
    <update id="updateNode" parameterType="finalproject.entity.Node">
        update node
        <trim prefix="set" suffixOverrides=",">
            <if test="status!=null"> status=#{status},</if>
        </trim>
        where id=#{id};
    </update>
</mapper>
